# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = [
    "nvme"
    "xhci_pci"
    "ahci"
    "usbhid"
    "usb_storage"
    "sd_mod"
  ];
  boot.initrd.kernelModules = [];
  boot.kernelModules = [];
  boot.extraModulePackages = [];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/70dc78ca-bba9-4b49-943c-d2cd67d84909";
    fsType = "ext4";
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/89AD-E319";
    fsType = "vfat";
  };

  fileSystems."/home/mryall" = {
    device = "/dev/disk/by-uuid/e3e82296-6292-4d66-bcdd-d8e76ab1cb7c";
    fsType = "ext4";
  };

  fileSystems."/tank/one" = {
    device = "/dev/disk/by-uuid/28837bf0-71db-47be-8b9c-b83601da7694";
    fsType = "ext4";
  };

  swapDevices = [{device = "/dev/disk/by-uuid/c1bb9c89-bee6-4cb7-a2ab-ba8bcc42d5ad";}];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.docker0.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp4s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.tailscale0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  # hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
  #  hardware.graphics = {
  #enable = true;
  #enable32Bit = true;
  #extraPackages = with pkgs; [
  # mesa.opencl
  # rocmPackages.clr.icd
  #];
  # };
  # hardware.amdgpu.initrd.enable = true;
}
